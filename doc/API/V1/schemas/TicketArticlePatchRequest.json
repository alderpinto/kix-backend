{
   "$id" : "TicketArticlePatchRequest.json",
   "$schema" : "http://json-schema.org/draft-07/schema",
   "description" : "The ticket article request object for update.",
   "type" : "object",
   "properties" : {
      "Article" : {
         "Bcc" : {
            "type" : "string"
         },
         "Body" : {
            "type" : "string"
         },
         "Cc" : {
            "type" : "string"
         },
         "CustomerVisible" : {
            "type" : "integer"
         },
         "DynamicFields" : {
            "description" : "list of dynamic field values to be set",
            "type" : "array",
            "items" : {
               "$ref" : "#/definitions/DynamicFieldValueSetItem_json-16dfcaf043"
            }
         },
         "From" : {
            "type" : "string"
         },
         "IncomingTime" : {
            "description" : "date time sting as \"YYYY-MM-DD HH24:MM:SS\"",
            "type" : "string"
         },
         "ReplyTo" : {
            "type" : "string"
         },
         "SenderTypeID" : {
            "type" : "integer"
         },
         "Subject" : {
            "type" : "string"
         },
         "TicketID" : {
            "description" : "to move the article to another ticket",
            "type" : "integer"
         },
         "TimeUnit" : {
            "type" : "integer"
         },
         "To" : {
            "type" : "string"
         }
      }
   },
   "required" : [
      "Article"
   ],
   "definitions" : {
      "DynamicFieldValueSetItem_json-16dfcaf043" : {
         "$id" : "DynamicFieldValueSetItem.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The dynamic field value object to set it for an object.",
         "type" : "object",
         "properties" : {
            "Name" : {
               "description" : "the name of the relevant dynamic field",
               "type" : "string"
            },
            "Value" : {
               "description" : "value type depends on the dynamic field (can also be an array of value type)",
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "integer"
                  },
                  {
                     "type" : "array",
                     "items" : {
                        "anyOf" : [
                           {
                              "type" : "string"
                           },
                           {
                              "type" : "integer"
                           }
                        ]
                     }
                  }
               ]
            }
         },
         "required" : [
            "Name",
            "Value"
         ]
      }
   }
}
