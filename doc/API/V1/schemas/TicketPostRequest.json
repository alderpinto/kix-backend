{
   "$id" : "TicketPostRequest.json",
   "$schema" : "http://json-schema.org/draft-07/schema",
   "description" : "The ticket request object for creation.",
   "type" : "object",
   "properties" : {
      "Ticket" : {
         "type" : "object",
         "properties" : {
            "Articles" : {
               "type" : "array",
               "item" : {
                  "$ref" : "#/definitions/TicketArticlePostItem_json-c0eed55787"
               }
            },
            "ContactID" : {
               "type" : "integer"
            },
            "DynamicFields" : {
               "description" : "list of dynamic field values to be set",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/DynamicFieldValueSetItem_json-16dfcaf043"
               }
            },
            "LockID" : {
               "type" : "integer"
            },
            "OrganisationID" : {
               "type" : "integer"
            },
            "OwnerID" : {
               "type" : "integer"
            },
            "PendingTime" : {
               "type" : "string"
            },
            "PriorityID" : {
               "type" : "integer"
            },
            "QueueID" : {
               "type" : "integer"
            },
            "ResponsibleID" : {
               "type" : "integer"
            },
            "StateID" : {
               "type" : "integer"
            },
            "TimeUnit" : {
               "type" : "integer"
            },
            "Title" : {
               "type" : "string"
            },
            "TypeID" : {
               "type" : "integer"
            }
         },
         "required" : [
            "ContactID",
            "Title"
         ]
      }
   },
   "required" : [
      "Ticket"
   ],
   "definitions" : {
      "DynamicFieldValueSetItem_json-16dfcaf043" : {
         "$id" : "DynamicFieldValueSetItem.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The dynamic field value object to set it for an object.",
         "type" : "object",
         "properties" : {
            "Name" : {
               "description" : "the name of the relevant dynami field",
               "type" : "string"
            },
            "Value" : {
               "description" : "value type depends on the dynamic field (can also be an array of value type)",
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "integer"
                  },
                  {
                     "type" : "array",
                     "items" : {
                        "anyOf" : [
                           {
                              "type" : "string"
                           },
                           {
                              "type" : "integer"
                           }
                        ]
                     }
                  }
               ]
            }
         },
         "required" : [
            "Name",
            "Value"
         ]
      },
      "DynamicFieldValueSetItem_json-e62db88bff" : {
         "$id" : "DynamicFieldValueSetItem.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The dynamic field value object to set it for an object.",
         "type" : "object",
         "properties" : {
            "Name" : {
               "description" : "the name of the relevant dynami field",
               "type" : "string"
            },
            "Value" : {
               "description" : "value type depends on the dynamic field (can also be an array of value type)",
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "integer"
                  },
                  {
                     "type" : "array",
                     "items" : {
                        "anyOf" : [
                           {
                              "type" : "string"
                           },
                           {
                              "type" : "integer"
                           }
                        ]
                     }
                  }
               ]
            }
         },
         "required" : [
            "Name",
            "Value"
         ]
      },
      "TicketArticleAttachmentPostItem_json-2fe64bc536" : {
         "$id" : "TicketArticleAttachmentPostItem.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket article attachment object for creation.",
         "type" : "object",
         "properties" : {
            "Content" : {
               "description" : "base63 encoded file content",
               "type" : "string"
            },
            "ContentType" : {
               "type" : "string"
            },
            "Filename" : {
               "type" : "string"
            }
         },
         "required" : [
            "Content",
            "ContentType",
            "Filename"
         ]
      },
      "TicketArticlePostItem_json-c0eed55787" : {
         "$id" : "TicketArticlePostItem.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket article object for creation.",
         "type" : "object",
         "properties" : {
            "Attachments" : {
               "type" : "array",
               "item" : {
                  "$ref" : "#/definitions/TicketArticleAttachmentPostItem_json-2fe64bc536"
               }
            },
            "AutoResponseType" : {
               "type" : "string"
            },
            "Bcc" : {
               "type" : "string"
            },
            "Body" : {
               "type" : "string"
            },
            "Cc" : {
               "type" : "string"
            },
            "ChannelID" : {
               "type" : "integer"
            },
            "Charset" : {
               "description" : "Required if no ContentType is given or MimeType is given.",
               "type" : "string"
            },
            "ContentType" : {
               "description" : "If not given MimeType and Charset is required.",
               "type" : "string"
            },
            "CustomerVisible" : {
               "type" : "integer"
            },
            "DynamicFields" : {
               "description" : "list of dynamic field values to be set",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/DynamicFieldValueSetItem_json-e62db88bff"
               }
            },
            "ExcludeMuteNotificationToUserID" : {
               "type" : "array",
               "items" : {
                  "type" : "integer"
               }
            },
            "ExcludeNotificationToUserID" : {
               "type" : "array",
               "items" : {
                  "type" : "integer"
               }
            },
            "ForceNotificationToUserID" : {
               "type" : "array",
               "items" : {
                  "type" : "integer"
               }
            },
            "From" : {
               "type" : "string"
            },
            "HistoryComment" : {
               "type" : "string"
            },
            "HistoryType" : {
               "type" : "string"
            },
            "IncomingTime" : {
               "description" : "date time sting as \"YYYY-MM-DD HH24:MM:SS\"",
               "type" : "string"
            },
            "MimeType" : {
               "description" : "Required if no ContentType is given or Charset is given.",
               "type" : "string"
            },
            "NoAgentNotify" : {
               "type" : "integer"
            },
            "ReplyTo" : {
               "type" : "string"
            },
            "SenderTypeID" : {
               "type" : "integer"
            },
            "Subject" : {
               "type" : "string"
            },
            "TimeUnit" : {
               "type" : "integer"
            },
            "To" : {
               "type" : "string"
            }
         },
         "required" : [
            "Body",
            "Subject"
         ]
      }
   }
}
