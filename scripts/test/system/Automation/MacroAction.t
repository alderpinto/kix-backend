# --
# Copyright (C) 2006-2022 c.a.p.e. IT GmbH, https://www.cape-it.de
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file LICENSE-GPL3 for license information (GPL3). If you
# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
# --

use strict;
use warnings;
use utf8;

use vars (qw($Self));

# get MacroAction object
my $AutomationObject = $Kernel::OM->Get('Automation');

#
# MacroAction tests
#

# get helper object
$Kernel::OM->ObjectParamAdd(
    'UnitTest::Helper' => {
        RestoreDatabase => 1,
    },
);
my $Helper = $Kernel::OM->Get('UnitTest::Helper');

my $TestPNGBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAmUAAAEmCAYAAAAjq+d4AAAAAXNSR0IArs4c6QAAAGJlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAABJKGAAcAAAASAAAAUKABAAMAAAABAAEAAKACAAQAAAAB
AAACZaADAAQAAAABAAABJgAAAABBU0NJSQAAAFNjcmVlbnNob3S2RA6mAAAB1mlUWHRYTUw6Y29t
LmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0
az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMu
b3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJk
ZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4
aWYvMS4wLyI+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yOTQ8L2V4aWY6UGl4ZWxZ
RGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+NjEzPC9leGlmOlBpeGVs
WERpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6VXNlckNvbW1lbnQ+U2NyZWVuc2hvdDwvZXhpZjpV
c2VyQ29tbWVudD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94Onht
cG1ldGE+Cow/wOIAAEAASURBVHgB7N0JvCVFdT/wRk1cMIoaV0BHUVHR4K5RWVRExRDccQmGGAX/
KIu4gAoILoCAIPu+aUARFBUEDIjsi6wuGDSiLNFo3BB3TeL/fUvPTU1Pd99737wZ3syc8/m81327
q2v51alTvzpV3bXSk570pD82KYlAIpAIJAKJQCKQCCQCtysCd7hdU8/EE4FEIBFIBBKBRCARSAQK
AknKUhESgUQgEUgEEoFEIBGYBwgkKZsHlZBZSAQSgUQgEUgEEoFEIElZ6kAikAgkAolAIpAIJALz
AIEkZfOgEjILiUAikAgkAolAIpAIJClLHUgEEoFEIBFIBBKBRGAeIHCnrjxcddVVXZfzWiKQCCQC
iUAikAgkAonAEkKgk5S96EUbNRtt9MIllGRGmwgkAolAIpAIJAKJQCLQRmCl/HhsG5L8nQgkAolA
IpAIJAKJwNJHINeULX3MM8VEIBFIBBKBRCARSAQWQSBJ2SKQ5IVEIBFIBBKBRCARSASWPgJJypY+
5pliIpAIJAKJQCKQCCQCiyCQpGwRSPJCIpAIJAKJQCKQCCQCSx+BJGVLH/NMMRFIBBKBRCARSAQS
gUUQSFK2CCR5IRFIBBKBRCARSAQSgaWPQJKypY95ppgIJAKJQCKQCCQCicAiCCQpWwSSvJAIJAKJ
QCKQCCQCicDSRyBJ2dLHPFNMBBKBRCARSAQSgURgEQQ6t1m6z33u07zqVa8qgY899tjm17/+9ejB
u93tbs0//dM/Nf/7v//bHHbYYc0f//jH0b32yYMf/OBm4403bk488cTmZz/7Wft27+/HPe5xzbrr
rtscf/zxzS9/+ctRuEc84hHNhhtu2HziE59ofvKTn4yuz8XJU5/61OYpT3nKKCrl+8///M/mnHPO
WSgPowB5kggkAolAIpAIJAKJwBwi0Okpu+c979n87d/+bfmb2YZpoeSe/OQnl+vPfOYzmzvcofPx
Ufh73/veJSwiN40sWLCgPPeXf/mXCz222mqrlesrr7zyQtfn4gfCp8wPfOADy9+jHvWo5uUvf3mz
2267NX/xF38xF0lkHIlAIpAIJAKJQCKQCPQi0Okpq0PzIF144YWjS09/+tNH5+2TO93pTs1///d/
jy5fe+21zWabbbaIN60dbvTALE+Qpj/84Q+dT9/xjnds/ud//md0b6WVVmr88YR1yXvf+95R+Fe+
8pXN3//93zcI2ze+8Y1RcHF6vstL2E7PQ+3ytn+PIp45QUR///vf15dG50PPBUHuK9cokjxJBBKB
RCARSAQSgXmJwCAp++EPf9iYSuTpMoV597vfvVlrrbWan//85w1vGkGI/uEf/qF4me5617s2//Ef
/9F87GMfKyTm0Y9+dPPP//zPzd57792st956hdwI/7CHPay57bbbmlNOOaU577zzSjyz+ceL9+pX
v7q5//3vX+I766yzmtNPP72QpX322af58Y9/3PB4ydN1111Xzv/6r/+6ePj23Xff5t///d8Hk735
5pvL/fDYPehBDypTt4985CMLcfvKV77SHHfccQWPdnpf+9rXSnmRtIc//OFlKvTkk09u/u7v/q6U
/1vf+laZnpUGLGH42Mc+tvmrv/qrUpZTTz21OfvssxvEECnswu0xj3lM84Y3vKGUAxaI2Ze//OXm
mGOO6SV2gwXOm4lAIpAIJAKJQCJwuyEwOP94+eWXFy/PE5/4xJJBa654h6644opRhp/1rGc1z33u
cxtesU9+8pPNXe5yl+btb397c7/73a+QuQc84AHF+3Pf+963QdJ4tJA2JM/atKGpyNe97nXNVltt
Nfp73vOeN0r3IQ95SLPttts2v/3tb0t83/3ud5tNN920WWeddUoYRA3JueSSS5qvfvWrDTK2xhpr
NN///vebr3/96833vve9UVz1yWtf+9pCkN70pjcVwnPLLbeMvGTys/rqqxfih0w+/vGPb7bZZpvi
eetKDyH81a9+1Zx00kmNdXry6/cJJ5zQyL/1cQTx4oE844wzmqOOOqqQMh5GJHgINyQYzsr52c9+
trnyyisb9THkzazLmueJQCKQCCQCiUAiMH8QGPSUITq8ZaYwL7rootLZ8wDF4nvTgC960Ysa3p5D
DjmklArZ2X777cui+R/84AeLlPSII45ofvSjHzW/+93vmi222KJ4iRCVLkFkfvOb34xumb4LQT54
hr74xS8WooU8rb322s0znvGM5oILLijBkEfpka233rpMre611169U53C8QQingjRne9850IoES5p
IT+8XQgQ4UGUD4SP1Om9+c1vLuntv//+JT1eLc8feuihzS9+8YuSDg8aQWhNj/LmIX1eMLB+Th5C
unCLe8jc5z//+UKIlR9uKYlAIpAIJAKJQCKwbCHwfyynJ9+XXXZZIV48XjxdSMWqq65aQpvWQ1jO
P//80dPXX399ObfIv03K/uu//qsQMgGCiMVaqFEE1cl+++3X/PSnPx1defazn12mQ10IIvT6179+
dB9JrAkJr1gtpjP71p5FuHe/+92jNWU8a9aYeYOUt43ccMMNEbQxBYmU3ete9yrX2ul5QzTSQ2SV
HyEjPHwh1rzxlkXe4xnlIeNwi/Vu4hSXKdOURCARSAQSgUQgEVi2EJiIlG2yySaN6Txk4eqrrx6R
Mt4uf7w7IeH9aRMU9+uXACL8bI/WtZF3vvOdxbPkHEGqPWvt9Nq/PTMkN954YyFPphDDO+gzH6Y/
ibVxhGeLtOOvXzBwv+vFAMSLx1D8u+++eyPNDTbYoJC0IKzteMVVS5C4+lqeJwKJQCKQCCQCicCy
hcBYUmZaEMFCti699NJCwuoiImk+JWHBPc+YdVLIyDe/+c3iRavDzuX5VVddVcjLG9/4xrIgHjH0
puSnP/3pxr3Zygte8ILyZqWp0ic84QllitKCfl4xXq4XvvCFBQNTl9Zu3XTTTSPv12zTRLq8Nelo
nRrPHIkXDGYb7/Of//zyeQ8vI6QkAolAIpAIJAKJwPxGoJOUhYcnPq9gCvOlL31pIWWK47o/nh+L
9hGUjTbaqCx4N2V3wAEHlDceY4ox4pnWo9PnIfLJCGvbfJTWt8Ss3+Ihu/jii0frvbqenSR95JLA
wAdvvdF52mmnld/KxavlBQVl9/bmgQceWMJPm568eEY8XpAwfbnLLruUa9dcc01ZkxeeuL58h+ct
8JUR51F/XjTwkkaSslJF+S8RSAQSgUQgEZjXCKw08ymF/k/yT5F1b10iZ/UasCken3VQU3zWYkk3
yMisI5vwQWvITNvWOx1M+GhvMNOYSOxclsOHfu3M4G3YlEQgEUgEEoFEIBGY3wh0espmk2WLzOvF
67OJYzbP8Ax5m3NpyjRbRk2aL16vuS7Hmmuu2fjeWUoikAgkAolAIpAIzH8E5sxTNv+LmjlMBBKB
RCARSAQSgURg/iIw+PHY+ZvtzFkikAgkAolAIpAIJALLFwJJypav+szSJAKJQCKQCCQCicAyikCS
smW04jLbiUAikAgkAolAIrB8IZCkbPmqzyxNIpAIJAKJQCKQCCyjCCQpW0YrLrOdCCQCiUAikAgk
AssXAknKlq/6zNIkAolAIpAIJAKJwDKKQJKyZbTiMtuJQCKQCCQCiUAisHwhkKRs+arPLE0ikAgk
AolAIpAILKMIJClbRisus50IJAKJQCKQCCQCyxcCScqWr/rM0iQCiUAikAgkAonAMopAkrJltOIy
24lAIpAIJAKJQCKwfCGQpGz5qs8sTSKQCCQCiUAikAgsowgkKVtGKy6znQgkAolAIpAIJALLFwJJ
ypav+szSJAKJQCKQCCQCicAyikCSsmW04jLbiUAikAgkAolAIrB8IZCkbPmqzyxNIpAIJAKJQCKQ
CCyjCCQpW0YrLrOdCCQCiUAikAgkAssXAknKlq/6zNIkAolAIpAIJAKJwDKKQJKyZbTiMtuJQCKQ
CCQCiUAisHwhkKRs+arPLE0ikAgkAolAIpAILKMIJClbRisus50IJAKJQCKQCCQCyxcCScqWr/rM
0iQCiUAikAgkAonAMopAkrJltOIy24lAIpAIJAKJQCKwfCGQpGz5qs8sTSKQCCQCiUAikAgsowgk
KVtGKy6znQgkAolAIpAIJALLFwJ3fNCDHrRru0gPfvCDm3/4h39ovv3tbze//e1v27dHv//f//t/
zf/8z/80P/jBD0bXuk4mja/r2dle+8u//MtmwYIFzc9+9rPZRlGee+hDH9q89rWvbb7+9a83//3f
/71YcdUPP/3pT2/+/u//vtl4442bxz3ucc097nGP5rvf/e4oiPy7/3d/93fN8573vOYRj3hE85vf
/Kb58Y9/PArj5G/+5m+aTTbZpIQVz93vfvcS5ve///1C4eLHq1/96ma99dZrnvrUp5a/Jz3pSQWn
n/70p80vf/nLCDbx8dnPfnbzt3/7twWf9kPPfe5zSxrXXXdd+9Zy+/tNb3pT87//+7/Nf/7nfzZD
OqiuXvGKVzT/9m//1tR1pZ7V0Xe+851S30sTqFVXXbV52cteVnTyGc94RrP66qs3N998c/O73/1u
MBsPechDir341re+NTbsUERtO/GABzygudvd7tb86le/GnpsoXtD+rhQwNaPdtqt28vcz7mqk7rg
D3vYw5rXvOY1zfXXX9+sttpqo/Naf+vwzuv20L5X/560L6mfWdzzTTfdtFl//fVHtjBsoiO9n1Tv
alzo7CR957i8D9mOcc/m/WUbgU5P2b3vfe/S0TKIQ4JYUMhxct/73rfEhzAsLXnrW9/avOQlL1ns
5B74wAfOed432mij5i1veUuz9tprF9L7qEc9qvnHf/zHYsAiw+95z3tKByl9nfyznvWs5l3velfz
5Cc/OYI0jMo73/nO5olPfGJz2223NTqW17/+9c3uu+/e3P/+9x+Fq0+e8IQnNIiY+wzIGmus0bz4
xS9u3v/+95ffddhJzh/zmMc0j3/84zuDPvaxjy1l7Ly5nF5UP9EmhnTQgAGZZXxr0dm5vvLKK9eX
l/g5PaMDSM2d7nSnZpVVVmle9KIXNR/4wAeav/qrvxpM/6//+q9LnseFG4xk5mZtd8S15557NtrG
NDKkj0Px1GkPhVtW7s1VndTlvd/97jfSzfq8DtM+r9tD+179e9K+pH5mcc8NaNlDtrD9N037q7GY
Kz0ash2LW+58fn4jcKeu7F177bXNZptt1vzxj39c6PYd73jH4hlb6OKffzDki+tJGopj6N4d7vAn
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
cOPpT396s9FGG3Xmeemll25+8IMfTJTMtr3pe/gf/uEfpjF64QtfWOL/1re+1Rd8oV5fWPV+oSY6
lScCiwkCnZ6yv/7rvy6kh0GZVJABBqZLnvjEJzaM3oLKU57ylELuJtWjI9lnn30a6SA6uZ122ql5
0IMeNJGqhz3sYQUf5G5IVllllV4shp5zr8bqyU9+cvPUpz511CPz3P+bv/mbZtllly1/K620Uknv
4x73uOlrf/7nfz5P+HF+DOH1wAc+sBDHxz72sSNVDelpPzxUn9ph+37X+E0S9yR56ou767oBRV8b
6Qof1+p8xLU4PupRjypl/Jd/+ZdxaYGP6kjUoTgi+dK/4oorDuqv28gjH/nI8gxSs6jLnDlz5msr
kfdJ20zb3gzlvcZIW3/GM54xFHyh3ltY9X6hJjqVJwKLCQIPXpB8POQhDykj/lrHm970pvpnOX/w
gx/c9I3eESJeKt61thix+eu6F2GHdP+///f/5hmZC+sv5M/+7M/idJ7jUJoEvP7665sttthiPu/a
UFqG7tWRd4U78sgj6yDlfFQaL7744sYfefnLX95ssskmzd577z2f57MrvvJQx78+vOjo8zQy8NLK
gxbSp6crT131KfTE0XPqSKSh/bvGry/u0BXHoTx11ft4znFcTNVt+PCmtqULizofEd7zke+4Vh+H
0uJZ0te+brzxxsZfyDLLLNPsueeepTzPOeecuFyO7XjqNtJH1NvP1ApHpa0OO5PzUbZlr732an79
618PqlZGddm18+O3vy5ph+0KM8m1IbwmiUvYvvrUVScjjaPaRITLYyKQCAwj0G0xhp9p/vEf/7FM
axhB3nXXXc0FF1zQnHvuuaUx80RddNFFzRe+8IXmMY95TLPVVls1PDU/+9nPGh1iTIeaIn3961/f
POlJTyqdAiN+/PHHN//+7//ebLrppuX6wx/+8NJpHXjggc13v/vdeVL1t3/7t83cuXObFVZYoUyz
nnHGGc1ll13W8PKZWjTaNFKVvrPPPrsQlJ133rnoMJXCa7T66quX38jKvvvuW9Lfl6Y6cml+wxve
0Oy///5lqs502Ktf/epmztQo+4c//GHB4/LLLy+PrLrqqs0aUx45Hdptt93W6Fi7pq2GsNp4442L
7v32268Zwq1O49A5w0un/PNe/PjHP24+/vGPN7fccktjupAX56CDDipT0MqCt+q8884r0zr0Bl68
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
Q7LKKquUbfGGwsQ9pKzPxorL9noLW+o6Nm4eF3aaUv/9F4HOvS8XNDsaSt+o1AbVRkH1fm11fO1n
beHRtY2T63SEx6f9u9YpzqHtP9pxxrN91/vuGz0iOhdccEFzxhlnlGD2NxwS2/aQGg/x+uuSoTQN
3WvrktYdd9yxjODtb3n66afPEwSesK3TNU+A6sdQesVjFNslQ2VWh99///3Ll8nra86PPPLI9qV5
fk+SBw+28evSP5TmdlkO4VIntB1vfa8rXXF/6DnEW3q62k6Xzq68Cie/XTraeY00xTN9dUe6/I2L
Ta2367wPA+kL29D1XH2tT0eEGbrfdc92SyussEL5WKttjkh8Yd8estdee22oLscuHW4EVuO0QeEX
RE/fs/R22Wx2bpQXv213r7/++maLLbaYr1yG4h66J208bqNs7KRtgd6Qofi76lhfHttYhP48JgJt
BDp7fu7+rhGUbTt05DpxX4cmW01NfdkY+aCDDiod/Otf//pmueWWK9NgX/va18pG16apXv7yl5dN
rXlKGHkbQR977LGlUe23335lo12enGWWWaZRsb/+9a+XTb6XXnrpssHtxz72sWallVZq3vSmNzW3
3HJLGXEifp/97GeLJ8o0kz3nzjnnnOaLX/xiSZupxNe85jXFw3LXXXcVsnTuuecWoyDOH/7wh42N
jY1uYlNomxdL/5Zbblni85ytShjGvfbaqxi+jTfeuORF2mw+bENiz++9994lXtMVDLP89GGlsZvm
tKGyBitPRlw8ZNzxZLPNNmtML37hC19ouuL0jOk98dBhVCi9COGll15adHT9E9bmyfbDg4dN3EN0
HsrQPXlWFjYnt++ddNX5Mfo3HRqdRqT36quvLi583iseEWk6++yzm4svvjiiaUwt8BzyJsrfWWed
Na1nOtCIE5jMmZpCUZa19OWhvSehZ4bqQa1fvbTJNY+SjsCmyzYFD3GPZw8RuOaaa8pm0LyQJHC5
8MILI3g5zqSeKXPl3dXOpEt+eDzhou7ceOONzTHHHNPcfffdvXWXzjqvOjG/le9DH/rQoqOuI115
1aaHcN90001LneJZ1JnFNHkXNja41za0N/vXCq9dnHfeec2XvvSlwTJDIm0Obiqb/OY3vynHrn/q
H/vFrvAUIxqxBZH2CQMkqm7nsFKvYWDPWGXx6U9/utTfiAPuRFqkXftQJtolvWRIfxsrefjOd75T
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';

my $FileContent = $Kernel::OM->Get('Main')->FileRead(
    Location => $Kernel::OM->Get('Config')->Get('Home') . '/scripts/test/system/sample/Automation/MacroAction/test.png',
    Mode     => 'binmode'
);
$Self->True(
    $FileContent,
    'load test.png',
);
my $TestPNGBin = $$FileContent;
my $TestPNGBinJSON = $Kernel::OM->Get('JSON')->Encode(
    Data => $TestPNGBin
);

my $NameRandom  = $Helper->GetRandomID();
my %MacroActions = (
    'test-macroaction-' . $NameRandom . '-1' => {
        Type => 'TitleSet',
        NewType => 'StateSet',
        Parameters => {
            Title => 'test',
        }
    },
    'test-macroaction-' . $NameRandom . '-2' => {
        Type => 'StateSet',
        Parameters => {
            State => 'open',
        }
    },
    'test-macroaction-' . $NameRandom . '-3' => {
        Type => 'PrioritySet',
        Parameters => {
            Priority => '3 normal'
        }
    },
);

# create macro
my $MacroID = $AutomationObject->MacroAdd(
    Name    => 'test-macro-' . $NameRandom,
    Type    => 'Ticket',
    ValidID => 1,
    UserID  => 1,
);

$Self->True(
    $MacroID,
    'MacroAdd() for new macro.',
);

# try to add macroactions
for my $Name ( sort keys %MacroActions ) {
    my $MacroActionID = $AutomationObject->MacroActionAdd(
        MacroID => $MacroID,
        Type    => $MacroActions{$Name}->{Type},
        Parameters => $MacroActions{$Name}->{Parameters},
        ValidID => 1,
        UserID  => 1,
    );

    $Self->True(
        $MacroActionID,
        'MacroActionAdd() for new macro action ' . $Name,
    );

    if ($MacroActionID) {
        $MacroActions{$Name}->{ID} = $MacroActionID;
    }
    my %MacroAction = $AutomationObject->MacroActionGet(
        ID => $MacroActionID
    );

    $Self->Is(
        $MacroAction{Type},
        $MacroActions{$Name}->{Type},
        'MacroActionGet() for macro action ' . $Name,
    );
}

# list MacroActions
my %MacroActionList = $AutomationObject->MacroActionList(
    MacroID => $MacroID
);
for my $Name ( sort keys %MacroActions ) {
    my $MacroActionID = $MacroActions{$Name}->{ID};

    $Self->True(
        exists $MacroActionList{$MacroActionID} && $MacroActionList{$MacroActionID} eq $MacroActions{$Name}->{Type},
        'MacroActionList() contains macro action ' . $Name . ' with ID ' . $MacroActionID,
    );
}

# change type of a single MacroAction
my $NameToChange = 'test-macroaction-' . $NameRandom . '-1';
my $IDToChange   = $MacroActions{$NameToChange}->{ID};

my $MacroActionUpdateResult = $AutomationObject->MacroActionUpdate(
    ID      => $IDToChange,
    Type    => $MacroActions{$NameToChange}->{NewType},
    ValidID => 1,
    UserID  => 1,
);

$Self->True(
    $MacroActionUpdateResult,
    'MacroActionUpdate() for changing type of macro action ' . $NameToChange . ' to ' . $MacroActions{$NameToChange}->{NewType},
);

# update parameters of a single MacroAction
$MacroActionUpdateResult = $AutomationObject->MacroActionUpdate(
    ID      => $IDToChange,
    Type    => $MacroActions{$NameToChange}->{NewType},
    Parameters => {
        State => 'new'
    },
    ValidID => 1,
    UserID  => 1,
);

$Self->True(
    $MacroActionUpdateResult,
    'MacroActionUpdate() for changing parameters of macro action.',
);

my %MacroAction = $AutomationObject->MacroActionGet( ID => $IDToChange );

$Self->True(
    $MacroAction{Parameters},
    'MacroActionGet() for macro action with parameters.',
);

# delete an existing macroaction
my $MacroActionDelete = $AutomationObject->MacroActionDelete(
    ID      => $IDToChange,
    UserID  => 1,
);

$Self->True(
    $MacroActionDelete,
    'MacroActionDelete() delete existing macroaction',
);

# delete a non existent macroaction
$MacroActionDelete = $AutomationObject->MacroActionDelete(
    ID      => 9999,
    UserID  => 1,
);

$Self->False(
    $MacroActionDelete,
    'MacroActionDelete() delete non existent macroaction',
);

# check variable replacement
my @Tests = (
    {
        Name => 'simple',
        MacroResults => {
            Test1 => 'test1_value',
        },
        Data => {
            Dummy => '${Test1}',
        },
        Expected => {
            Dummy => 'test1_value',
        }
    },
    {
        Name => 'simple as part of a string',
        MacroResults => {
            Test1 => 'test1_value',
        },
        Data => {
            Dummy => '${Test1}/dummy',
        },
        Expected => {
            Dummy => 'test1_value/dummy',
        }
    },
    {
        Name => 'array',
        MacroResults => {
            Test1 => [
                1,2,3
            ]
        },
        Data => {
            Dummy => '${Test1:1}',
        },
        Expected => {
            Dummy => '2',
        }
    },
    {
        Name => 'hash',
        MacroResults => {
            Test1 => {
                Test2 => 'test2'
            }
        },
        Data => {
            Dummy => '${Test1.Test2}',
        },
        Expected => {
            Dummy => 'test2',
        }
    },
    {
        Name => 'array of hashes with arrays of hashes',
        MacroResults => {
            Test1 => [
                {},
                {
                    Test2 => [
                        {
                            Test3 => 'test3'
                        }
                    ]
                }
            ]
        },
        Data => {
            Dummy => '${Test1:1.Test2:0.Test3}',
        },
        Expected => {
            Dummy => 'test3',
        }
    },
    {
        Name => 'array of hashes with arrays of hashes in text',
        MacroResults => {
            Test1 => [
                {},
                {
                    Test2 => [
                        {
                            Test3 => 'test'
                        }
                    ]
                }
            ]
        },
        Data => {
            Dummy => 'this is a ${Test1:1.Test2:0.Test3}. a good one',
        },
        Expected => {
            Dummy => 'this is a test. a good one',
        }
    },
    {
        Name => 'array of hashes with arrays of hashes direct assignment of structure',
        MacroResults => {
            Test1 => [
                {},
                {
                    Test2 => [
                        {
                            Test3 => 'test'
                        }
                    ]
                }
            ]
        },
        Data => {
            Dummy => '${Test1:1.Test2}',
        },
        Expected => {
            Dummy => [
                {
                    Test3 => 'test'
                }
            ]
        }
    },
    {
        Name => 'nested variables (2 levels)',
        MacroResults => {
            Test1 => {
                Test2 => {
                    Test3 => 'found!'
                }
            },
            Indexes => {
                '1st' => 'Test2',
                '2nd' => 'Test3'
            }
        },
        Data => {
            Dummy => '${Test1.${Indexes.1st}.${Indexes.2nd}}',
        },
        Expected => {
            Dummy => 'found!'
        }
    },
    {
        Name => 'nested variables (4 levels)',
        MacroResults => {
            Test1 => {
                Test2 => {
                    Test3 => 'found!'
                }
            },
            Indexes => {
                '1st' => 'Test2',
                '2nd' => 'Test3'
            },
            Which => {
                'the first one' => '1st',
                Index => {
                    Should => {
                        I => {
                            Use => [
                                'none',
                                '2nd',
                                'the first one',
                                '3rd'
                            ]
                        }
                    }
                }
            },
        },
        Data => {
            Dummy => '${Test1.${Indexes.${Which.${Which.Index.Should.I.Use:2}}}.${Indexes.2nd}}',
        },
        Expected => {
            Dummy => 'found!'
        }
    },
    {
        Name => 'nested variable in filter',
        MacroResults => {
            Variable1 => '2022-10-01 12:22:33',
            Variable2 => 3,
            Variable3 => 'TimeStamp'
        },
        Data => {
            Result => '${Variable1|DateUtil.Calc(+${Variable2}M)|DateUtil.UnixTime|DateUtil.${Variable3}}',
        },
        Expected => {
            Result => '2023-01-01 12:22:33'
        }
    },
    {
        Name => 'base64 filter',
        MacroResults => {
            Variable1 => 'test123',
        },
        Data => {
            Result => '
1: ${Variable1|base64}
2: ${Variable1|ToBase64}
3: ${Variable1|ToBase64|FromBase64}
',
        },
        Expected => {
            Result => '
1: dGVzdDEyMw==
2: dGVzdDEyMw==
3: test123
'
        }
    },
    {
        Name => 'base64 filter with binary content containing pipe characters',
        MacroResults => {
            Variable1 => $TestPNGBase64,
        },
        Data => {
            Result => '${Variable1|FromBase64}',
        },
        Expected => {
            Result => $TestPNGBin,
        }
    },
    {
        Name => 'base64 filter with binary content containing pipe characters in json-text',
        MacroResults => {
            Article => {
                Attachments => [
                    {
                        Filename    => 'test.png',
                        ContentType => 'image/png',
                        Content     => $TestPNGBase64,
                    }
                ]
            },
        },
        Data => {
            Result => '[{\n  \"file\": [\n   null,\n   \"${Article.Attachments:0.Filename}\",\n   {\"content-type\": \"${Article.Attachments:0.ContentType}\"},\n   {\"content\": \"${Article.Attachments:0.Content|FromBase64|ToJSON}\"}\n  ]\n }\n]',
        },
        Expected => {
            Result => '[{\n  \"file\": [\n   null,\n   \"test.png\",\n   {\"content-type\": \"image/png\"},\n   {\"content\": \"$TestPNGBinJSON\"}\n  ]\n }\n]',
        }
    },
    {
        Name => 'JSON filter in text',
        MacroResults => {
            Variable1 => {
                key => 'test123',
            }
        },
        Data => {
            Result => '
1: ${Variable1|JSON}
2: ${Variable1|ToJSON}
',
        },
        Expected => {
            Result => '
1: {"key":"test123"}
2: {"key":"test123"}
'
        }
    },
    {
        Name => 'JSON filter as object assignment',
        MacroResults => {
            Variable1 => {
                key => 'test123',
            }
        },
        Data => {
            Result => '${Variable1|ToJSON|FromJSON}',
        },
        Expected => {
            Result => {
                key => 'test123',
            }
        }
    },
    {
        Name => 'jq filter',
        MacroResults => {
            Variable1 => '[
                { "Key": 1, "Value": 1111, "Flag": "a" },
                { "Key": 2, "Value": 2222, "Flag": "b" },
                { "Key": 3, "Value": 3333, "Flag": "a" }
            ]'
        },
        Data => {
            Result => '${Variable1|jq(. - map(. :: select(.Flag=="b")) :: .[] .Key)}',
        },
        Expected => {
            Result => '1
3',
        }
    },
);

# load additional filter
$AutomationObject->_GetVariableFilter();

my $TestCount = 0;
foreach my $Test ( @Tests ) {
    $TestCount++;

    $AutomationObject->{MacroResults} = $Test->{MacroResults};

    my %Data = %{$Test->{Data}};

    $AutomationObject->_ReplaceResultVariables(
        Data => \%Data,
    );

    $Self->IsDeeply(
        \%Data,
        $Test->{Expected},
        '_ReplaceResultVariables() Test "'.$Test->{Name}.'"',
    );
}

# cleanup is done by RestoreDatabase

1;



=back

=head1 TERMS AND CONDITIONS

This software is part of the KIX project
(L<https://www.kixdesk.com/>).

This software comes with ABSOLUTELY NO WARRANTY. For details, see the enclosed file
LICENSE-GPL3 for license information (GPL3). If you did not receive this file, see

<https://www.gnu.org/licenses/gpl-3.0.txt>.

=cut
